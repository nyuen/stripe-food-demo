<div id="notification-wrapper" class="hidden">
  <div
    aria-live="assertive"
    class="fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start z-50"
  >
    <div class="w-full flex flex-col items-center space-y-4 sm:items-end">
      <div
        class="max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden"
      >
        <div class="p-4">
          <div class="flex items-start pt-0.5">
            <div class="flex-shrink-0">
              <!-- Heroicon name: outline/check-circle -->
              <svg
                id="notification-success-icon"
                class="h-6 w-6 text-green-400"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                ></path>
              </svg>
              <svg
                id="notification-error-icon"
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                class="hidden"
              >
                <path
                  d="M10 6V10M10 14H10.01M19 10C19 14.9706 14.9706 19 10 19C5.02944 19 1 14.9706 1 10C1 5.02944 5.02944 1 10 1C14.9706 1 19 5.02944 19 10Z"
                  stroke="#F56568"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                ></path>
              </svg>
            </div>
            <div class="ml-3 w-0 flex-1">
              <p class="text-sm font-medium text-gray-900" id="notification-title"></p>
              <p class="mt-1 text-sm text-gray-500" id="notification-text"></p>
            </div>
            <div class="ml-4 flex-shrink-0 flex">
              <button
                class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500"
                id="notification-close-button"
              >
                <span class="sr-only">
                  Close
                </span>
                <!-- Heroicon name: solid/x -->
                <svg
                  class="h-5 w-5"
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                  aria-hidden="true"
                >
                  <path
                    fill-rule="evenodd"
                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                    clip-rule="evenodd"
                  ></path>
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  (() => {
    const notificationWrapper = document.getElementById('notification-wrapper');
    const notificationTitle = document.getElementById('notification-title');
    const notificationText = document.getElementById('notification-text');
    const notificationCloseButton = document.getElementById('notification-close-button');
    const notificationSuccessIcon = document.getElementById('notification-success-icon');
    const notificationErrorIcon = document.getElementById('notification-error-icon');

    let currentTimer = null;
    notificationWrapper.addEventListener('notification', (event) => {
      notificationTitle.innerText = event.detail.title;
      notificationText.innerText = event.detail.text;

      if (event.detail.type === 'success') {
        notificationSuccessIcon.classList.remove('hidden');
        notificationErrorIcon.classList.add('hidden');
      }
      if (event.detail.type === 'error') {
        notificationErrorIcon.classList.remove('hidden');
        notificationSuccessIcon.classList.add('hidden');
      }

      notificationWrapper.classList.remove('hidden');

      if (currentTimer) {
        clearTimeout(currentTimer);
      }
      currentTimer = setTimeout(() => {
        notificationWrapper.classList.add('hidden');
      }, 3000);
    });

    notificationCloseButton.addEventListener('click', () => {
      notificationWrapper.classList.add('hidden');
    });

    window.notificationEvents = {
      success(title = '', text = '') {
        const successEvent = new CustomEvent(
          'notification',
          {
            detail: { type: 'success', title, text }
          }
        );

        notificationWrapper.dispatchEvent(successEvent);
      },
      fail(title = 'Sorry, something goes wrong.', text = 'Please try again later or contact us for support.') {
        const failEvent = new CustomEvent(
          'notification',
          {
            detail: { type: 'error', title, text }
          }
        );

        notificationWrapper.dispatchEvent(failEvent);
      }
    };
  })();
</script>
